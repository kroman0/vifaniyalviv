[buildout]
extends = base.cfg
parts +=
    i18ndude
    paster
    test
    omelette
    zopepy
    repozo
    backup

eggs +=
    sauna.reload
    Products.Clouseau
    Products.DocFinderTab
    Products.PrintingMailhost

[instance]
http-address = 8080
debug-mode = on
verbose-security = on
zope-conf-additional =
    %import sauna.reload
environment-vars =
    zope_i18n_compile_mo_files true
    RELOAD_PATH src

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

# create bin/i18ndude command
[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
    ${instance:eggs}

# create paster command with Dexterity support
[paster]
recipe = zc.recipe.egg
eggs =
   ZopeSkel<3.0dev
   PasteScript
   PasteDeploy
   ${instance:eggs}
entry-points = paster=paste.script.command:run


# symlinks all Python source code to parts/omelette folder when buildout is run
# windows users will need to install additional software for this part to build
# correctly.  See http://pypi.python.org/pypi/collective.recipe.omelette for
# relevant details.
[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[zopepy]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/zc.recipe.egg
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

[backup]
recipe = collective.recipe.backup
backup_blobs = True
blob_storage = ${buildout:directory}/var/blobstorage
